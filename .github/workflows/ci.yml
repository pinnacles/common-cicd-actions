name: Common CI reusable workflow

on:
  workflow_call:
    inputs:
      use_ruby:
        description: "whether use ruby or not"
        required: false
        default: false
        type: boolean
      ruby_version:
        description: "ruby version"
        required: false
        type: string
      use_node:
        description: "whether use node or not"
        required: false
        default: false
        type: boolean
      node_version:
        description: "node version"
        required: false
        type: string
      node_package_manager:
        description: "node package manager name"
        required: false
        type: string
      use_go:
        description: "whether use go or not"
        required: false
        default: false
        type: boolean
      go_version:
        description: "go version"
        required: false
        type: string
      use_mysql:
        description: "whether use mysql or not"
        required: false
        default: false
        type: boolean
      mysql_version:
        description: "mysql version"
        required: false
        type: string
      test_in_parallel:
        description: "whether test in parallel or not"
        required: false
        default: false
        type: boolean
      use_simplecov_report:
        description: "whether use simplecov or not"
        required: false
        default: false
        type: boolean
      simplecov_report_path:
        description: "path to coverage report"
        required: false
        default: coverage
        type: string
      simplecov_command:
        description: "execute simplecov command"
        required: false
        default: "bundle exec rake coverage:report"
        type: string
    secrets:
      github_pat:
        description: "Personal Access Token of bot user"
        required: false

jobs:
  dependency-resolution:
    if: ${{ github.event_name == 'pull_request' }}
    name: resolve dependencies
    runs-on: ubuntu-latest-16-cores
    outputs:
      all_changed_files: ${{ steps.changed-files.outputs.all_modified_files }}
      base_ref_hash: ${{ steps.hash.outputs.base_ref_hash }}
      ruby_is_changed: ${{ steps.check-ruby-is-changed.outputs.ruby_is_changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: store base_ref hash with output parameter
        run: |
          echo "::set-output name=base_ref_hash::$(git show-branch --merge-base origin/${{ github.base_ref }} origin/${{ github.head_ref }} || echo "")"
        id: hash
      - name: get changed files
        id: changed-files
        uses: tj-actions/changed-files@v1.1.2
      - name: check whether ruby file exist in changed files or not
        id: check-ruby-is-changed
        run: |
          DIRS=$(echo ${{ steps.changed-files.outputs.all_modified_files }} | tr " " "\n" | cut -f1,2,3 -d'/' | uniq | sort)
          RUBY_CHANGED="false"
          for DIR in ${DIRS}; do
            if [[ ${DIR} =~ ^.*\.rb$ ]]; then
              RUBY_CHANGED="true"
              break
            fi
          done
          echo "::set-output name=ruby_is_changed::${RUBY_CHANGED}"
      - uses: pinnacles/common-cicd-actions/.github/actions/setup-lang@v0.1.0
        with:
          use_ruby: ${{ inputs.use_ruby }}
          ruby_version: ${{ inputs.ruby_version }}
          use_node: ${{ inputs.use_node }}
          node_version: ${{ inputs.node_version }}
          node_package_manager: ${{ inputs.node_package_manager }}
          use_go: ${{ inputs.use_go }}
          go_version: ${{ inputs.go_version }}

  lint:
    name: execute `make lint`
    needs: dependency-resolution
    runs-on: ubuntu-latest-16-cores
    steps:
      - uses: actions/checkout@v2
      - uses: pinnacles/common-cicd-actions/.github/actions/setup-lang@v0.1.0
        with:
          use_ruby: ${{ inputs.use_ruby }}
          ruby_version: ${{ inputs.ruby_version }}
          use_node: ${{ inputs.use_node }}
          node_version: ${{ inputs.node_version }}
          node_package_manager: ${{ inputs.node_package_manager }}
          use_go: ${{ inputs.use_go }}
          go_version: ${{ inputs.go_version }}
      - run: make lint
        env:
          ACTION_TYPE: CI
          RUBY_VERSION: ${{ inputs.ruby_version }}
          NODE_VERSION: ${{ inputs.node_version }}
          GO_VERSION: ${{ inputs.go_version }}
          ALL_CHANGED_FILES: ${{ needs.dependency-resolution.outputs.all_changed_files }}

  test:
    if: ${{ inputs.use_mysql == false && inputs.test_in_parallel == false }}
    name: execute `make test`
    needs: dependency-resolution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pinnacles/common-cicd-actions/.github/actions/setup-lang@v0.1.0
        with:
          use_ruby: ${{ inputs.use_ruby }}
          ruby_version: ${{ inputs.ruby_version }}
          use_node: ${{ inputs.use_node }}
          node_version: ${{ inputs.node_version }}
          node_package_manager: ${{ inputs.node_package_manager }}
          use_go: ${{ inputs.use_go }}
          go_version: ${{ inputs.go_version }}
      - run: make test
        env:
          ACTION_TYPE: CI
          RUBY_VERSION: ${{ inputs.ruby_version }}
          NODE_VERSION: ${{ inputs.node_version }}
          GO_VERSION: ${{ inputs.go_version }}
          GITHUB_TOKEN: ${{ secrets.github_pat }}
          COVERAGE: ${{ inputs.use_simplecov_report }}
          ALL_CHANGED_FILES: ${{ needs.dependency-resolution.outputs.all_changed_files }}
      - name: upload coverage report
        if: ${{ inputs.use_simplecov_report == true }}
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report-${{ github.run_id }}
          path: ${{ inputs.simplecov_report_path }}
          if-no-files-found: warn

  test-with-mysql:
    if: ${{ inputs.use_mysql == true && inputs.test_in_parallel == false }}
    name: execute `make test`
    needs: dependency-resolution
    runs-on: ubuntu-${{ startsWith(inputs.mysql_version, '5') && '18.04' || 'latest' }}
    services:
      db:
        image: mysql:${{ inputs.mysql_version }}
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: pinnacles/common-cicd-actions/.github/actions/setup-lang@v0.1.0
        with:
          use_ruby: ${{ inputs.use_ruby }}
          ruby_version: ${{ inputs.ruby_version }}
          use_node: ${{ inputs.use_node }}
          node_version: ${{ inputs.node_version }}
          node_package_manager: ${{ inputs.node_package_manager }}
          use_go: ${{ inputs.use_go }}
          go_version: ${{ inputs.go_version }}
      - run: make test
        env:
          ACTION_TYPE: CI
          RUBY_VERSION: ${{ inputs.ruby_version }}
          NODE_VERSION: ${{ inputs.node_version }}
          GO_VERSION: ${{ inputs.go_version }}
          MYSQL_VERSION: ${{ inputs.mysql_version }}
          GITHUB_TOKEN: ${{ secrets.github_pat }}
          COVERAGE: ${{ inputs.use_simplecov_report }}
          ALL_CHANGED_FILES: ${{ needs.dependency-resolution.outputs.all_changed_files }}
      - name: upload coverage report
        if: ${{ inputs.use_simplecov_report == true }}
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report-${{ github.run_id }}
          path: ${{ inputs.simplecov_report_path }}
          if-no-files-found: warn

  test-in-parallel:
    if: ${{ inputs.use_mysql == false && inputs.test_in_parallel == true }}
    name: execute `make test`
    needs: dependency-resolution
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node_count: [8]
        node_index: [0, 1, 2, 3, 4, 5, 6, 7]
    steps:
      - uses: actions/checkout@v2
      - uses: pinnacles/common-cicd-actions/.github/actions/setup-lang@v0.1.0
        with:
          use_ruby: ${{ inputs.use_ruby }}
          ruby_version: ${{ inputs.ruby_version }}
          use_node: ${{ inputs.use_node }}
          node_version: ${{ inputs.node_version }}
          node_package_manager: ${{ inputs.node_package_manager }}
          use_go: ${{ inputs.use_go }}
          go_version: ${{ inputs.go_version }}
      - uses: pinnacles/common-cicd-actions/.github/actions/download-rspec-reports@v0.5.3
      - run: |
          curl -L -o split-test https://github.com/mtsmfm/split-test/releases/download/v1.0.0/split-test-x86_64-unknown-linux-gnu
          chmod +x split-test
      - run: make test
        env:
          ACTION_TYPE: CI
          RUBY_VERSION: ${{ inputs.ruby_version }}
          NODE_VERSION: ${{ inputs.node_version }}
          GO_VERSION: ${{ inputs.go_version }}
          NODE_COUNT: ${{ matrix.node_count }}
          NODE_INDEX: ${{ matrix.node_index }}
          JUNIT_REPORT_DIR_OLD: old-rspec-reports
          JUNIT_REPORT_DIR_NEW: rspec-reports
          GITHUB_TOKEN: ${{ secrets.github_pat }}
          COVERAGE: ${{ inputs.use_simplecov_report }}
          ALL_CHANGED_FILES: ${{ needs.dependency-resolution.outputs.all_changed_files }}
      - name: upload coverage report
        if: ${{ inputs.use_simplecov_report == true }}
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report-${{ github.run_id }}
          path: ${{ inputs.simplecov_report_path }}
          if-no-files-found: warn

  test-in-parallel-with-mysql:
    if: ${{ inputs.use_mysql == true && inputs.test_in_parallel == true }}
    name: execute `make test`
    needs: dependency-resolution
    runs-on: ubuntu-${{ startsWith(inputs.mysql_version, '5') && '18.04' || 'latest' }}-16-cores
    services:
      db:
        image: mysql:${{ inputs.mysql_version }}
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        node_count: [8]
        node_index: [0, 1, 2, 3, 4, 5, 6, 7]
    steps:
      - uses: actions/checkout@v2
      - uses: pinnacles/common-cicd-actions/.github/actions/setup-lang@v0.1.0
        with:
          use_ruby: ${{ inputs.use_ruby }}
          ruby_version: ${{ inputs.ruby_version }}
          use_node: ${{ inputs.use_node }}
          node_version: ${{ inputs.node_version }}
          node_package_manager: ${{ inputs.node_package_manager }}
          use_go: ${{ inputs.use_go }}
          go_version: ${{ inputs.go_version }}
      - uses: pinnacles/common-cicd-actions/.github/actions/download-rspec-reports@v0.5.3
      - run: |
          curl -L -o split-test https://github.com/mtsmfm/split-test/releases/download/v1.0.0/split-test-x86_64-unknown-linux-gnu
          chmod +x split-test
      - run: make test
        env:
          ACTION_TYPE: CI
          RUBY_VERSION: ${{ inputs.ruby_version }}
          NODE_VERSION: ${{ inputs.node_version }}
          GO_VERSION: ${{ inputs.go_version }}
          NODE_COUNT: ${{ matrix.node_count }}
          NODE_INDEX: ${{ matrix.node_index }}
          JUNIT_REPORT_DIR_OLD: old-rspec-reports
          JUNIT_REPORT_DIR_NEW: rspec-reports
          GITHUB_TOKEN: ${{ secrets.github_pat }}
          COVERAGE: ${{ inputs.use_simplecov_report }}
          ALL_CHANGED_FILES: ${{ needs.dependency-resolution.outputs.all_changed_files }}
      - name: upload coverage report
        if: ${{ inputs.use_simplecov_report == true }}
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report-${{ github.run_id }}
          path: ${{ inputs.simplecov_report_path }}
          if-no-files-found: warn

  simplecov-report-action:
    if: ${{ (inputs.use_simplecov_report == true) && (always() && contains(needs.*.result, 'success') && !contains(needs.*.result, 'failure') && needs.dependency-resolution.outputs.ruby_is_changed == 'true')}}
    name: report simplecov coverage
    needs: [
      dependency-resolution,
      test,
      test-with-mysql,
      test-in-parallel,
      test-in-parallel-with-mysql,
    ]
    runs-on: ubuntu-latest-16-cores
    steps:
      - uses: actions/checkout@v2
      - uses: pinnacles/common-cicd-actions/.github/actions/setup-lang@v0.1.0
        with:
          use_ruby: ${{ inputs.use_ruby }}
          ruby_version: ${{ inputs.ruby_version }}
          use_node: ${{ inputs.use_node }}
          node_version: ${{ inputs.node_version }}
          node_package_manager: ${{ inputs.node_package_manager }}
          use_go: ${{ inputs.use_go }}
          go_version: ${{ inputs.go_version }}
      - name: download coverage report
        uses: actions/download-artifact@v2
        with:
          name: coverage-report-${{ github.run_id }}
          path: ${{ inputs.simplecov_report_path }}
      - run: ${{ inputs.simplecov_command }}
      - name: delete coverage report
        uses: geekyeggo/delete-artifact@v1
        with:
          name: coverage-report-${{ github.run_id }}
      - name: download head of baseRef coverage report
        uses: dawidd6/action-download-artifact@v2
        with:
          branch: ${{ github.base_ref }}
          name: coverage-head
          workflow: report.yml
          path: baseref_coverage
        continue-on-error: true
      - name: download specific sha of baseRef coverage report if its exist
        uses: dawidd6/action-download-artifact@v2
        with:
          branch: ${{ github.base_ref }}
          name: coverage-${{ needs.dependency-resolution.outputs.base_ref_hash }}
          workflow: report.yml
          path: baseref_coverage
        continue-on-error: true
      - uses: pinnacles/simplecov-report-action@v1.7.4
        with:
          headRefCoveragePath: ${{ inputs.simplecov_report_path }}/coverage.json
          baseRefCoveragePath: baseref_coverage/coverage.json
          token: ${{ secrets.GITHUB_TOKEN }}
          baseBranch: ${{ github.base_ref }}

  build:
    name: execute `make build`
    needs: dependency-resolution
    runs-on: ubuntu-latest-16-cores
    steps:
      - uses: actions/checkout@v2
      - uses: pinnacles/common-cicd-actions/.github/actions/setup-lang@v0.1.0
        with:
          use_ruby: ${{ inputs.use_ruby }}
          ruby_version: ${{ inputs.ruby_version }}
          use_node: ${{ inputs.use_node }}
          node_version: ${{ inputs.node_version }}
          node_package_manager: ${{ inputs.node_package_manager }}
          use_go: ${{ inputs.use_go }}
          go_version: ${{ inputs.go_version }}
      - run: make build
        env:
          ACTION_TYPE: CI
          RUBY_VERSION: ${{ inputs.ruby_version }}
          NODE_VERSION: ${{ inputs.node_version }}
          GO_VERSION: ${{ inputs.go_version }}
          ALL_CHANGED_FILES: ${{ needs.dependency-resolution.outputs.all_changed_files }}

  post-process:
    name: execute `make post-process`
    needs:
      [
        lint,
        test,
        test-with-mysql,
        test-in-parallel,
        test-in-parallel-with-mysql,
        build,
        simplecov-report-action,
      ]
    if: ${{ ! failure() }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: make post-process
        env:
          ACTION_TYPE: CI
