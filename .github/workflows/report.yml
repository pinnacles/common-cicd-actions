name: Common Coverage reusable workflow

on:
  workflow_call:
    inputs:
      ruby_version:
        description: "ruby version"
        required: false
        type: string
      use_mysql:
        description: "whether use mysql or not"
        required: false
        default: false
        type: boolean
      mysql_version:
        description: "mysql version"
        required: false
        type: string
      test_in_parallel:
        description: "whether test in parallel or not"
        required: false
        default: false
        type: boolean
      use_simplecov_report:
        description: "whether use simplecov or not"
        required: false
        default: false
        type: boolean
      simplecov_report_path:
        description: "path to coverage report"
        required: false
        default: coverage
        type: string
      simplecov_command:
        description: "execute simplecov command"
        required: false
        default: "bundle exec rake coverage:report"
        type: string
    secrets:
      github_pat:
        description: "Personal Access Token of bot user"
        required: false

jobs:
  dependency-resolution:
    name: resolve dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pinnacles/common-cicd-actions/.github/actions/setup-lang@v0.1.0
        with:
          use_ruby: 'true'
          ruby_version: ${{ inputs.ruby_version }}

  test:
    if: ${{ inputs.use_mysql == false && inputs.test_in_parallel == false }}
    name: execute `make test`
    needs: dependency-resolution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pinnacles/common-cicd-actions/.github/actions/setup-lang@v0.1.0
        with:
          use_ruby: 'true'
          ruby_version: ${{ inputs.ruby_version }}
      - run: make test
        env:
          ACTION_TYPE: CI
          RUBY_VERSION: ${{ inputs.ruby_version }}
          GITHUB_TOKEN: ${{ secrets.github_pat }}
          COVERAGE: ${{ inputs.use_simplecov_report }}
          FORCE_TEST: true
      - name: upload coverage report
        if: ${{ inputs.use_simplecov_report == true }}
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report-${{ github.run_id }}
          path: ${{ inputs.simplecov_report_path }}
          if-no-files-found: warn
      - name: upload rspec report
        uses: actions/upload-artifact@v2
        with:
          name: rspec-reports
          path: rspec-reports
          if-no-files-found: warn

  test-with-mysql:
    if: ${{ inputs.use_mysql == true && inputs.test_in_parallel == false }}
    name: execute `make test`
    needs: dependency-resolution
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:${{ inputs.mysql_version }}
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: pinnacles/common-cicd-actions/.github/actions/setup-lang@v0.1.0
        with:
          use_ruby: 'true'
          ruby_version: ${{ inputs.ruby_version }}
      - run: make test
        env:
          ACTION_TYPE: CI
          RUBY_VERSION: ${{ inputs.ruby_version }}
          MYSQL_VERSION: ${{ inputs.mysql_version }}
          GITHUB_TOKEN: ${{ secrets.github_pat }}
          COVERAGE: ${{ inputs.use_simplecov_report }}
          FORCE_TEST: true
      - name: upload coverage report
        if: ${{ inputs.use_simplecov_report == true }}
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report-${{ github.run_id }}
          path: ${{ inputs.simplecov_report_path }}
          if-no-files-found: warn
      - name: upload rspec report
        uses: actions/upload-artifact@v2
        with:
          name: rspec-reports
          path: rspec-reports
          if-no-files-found: warn

  test-in-parallel:
    if: ${{ inputs.use_mysql == false && inputs.test_in_parallel == true }}
    name: execute `make test`
    needs: dependency-resolution
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node_count: [12]
        node_index: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
    steps:
      - uses: actions/checkout@v2
      - uses: pinnacles/common-cicd-actions/.github/actions/setup-lang@v0.1.0
        with:
          use_ruby: 'true'
          ruby_version: ${{ inputs.ruby_version }}
      - uses: pinnacles/common-cicd-actions/.github/actions/download-rspec-reports@v0.5.3
      - run: |
          curl -L -o split-test https://github.com/mtsmfm/split-test/releases/download/v1.0.0/split-test-x86_64-unknown-linux-gnu
          chmod +x split-test
      - run: make test
        env:
          ACTION_TYPE: CI
          RUBY_VERSION: ${{ inputs.ruby_version }}
          NODE_COUNT: ${{ matrix.node_count }}
          NODE_INDEX: ${{ matrix.node_index }}
          JUNIT_REPORT_DIR_OLD: old-rspec-reports
          JUNIT_REPORT_DIR_NEW: rspec-reports
          GITHUB_TOKEN: ${{ secrets.github_pat }}
          COVERAGE: ${{ inputs.use_simplecov_report }}
          FORCE_TEST: true
      - name: upload coverage report
        if: ${{ inputs.use_simplecov_report == true }}
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report-${{ github.run_id }}
          path: ${{ inputs.simplecov_report_path }}
          if-no-files-found: warn
      - name: upload rspec report
        uses: actions/upload-artifact@v2
        with:
          name: rspec-reports
          path: rspec-reports
          if-no-files-found: warn

  test-in-parallel-with-mysql:
    if: ${{ inputs.use_mysql == true && inputs.test_in_parallel == true }}
    name: execute `make test`
    needs: dependency-resolution
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:${{ inputs.mysql_version }}
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        node_count: [8]
        node_index: [0, 1, 2, 3, 4, 5, 6, 7]
    steps:
      - uses: actions/checkout@v2
      - uses: pinnacles/common-cicd-actions/.github/actions/setup-lang@v0.1.0
        with:
          use_ruby: 'true'
          ruby_version: ${{ inputs.ruby_version }}
      - uses: pinnacles/common-cicd-actions/.github/actions/download-rspec-reports@v0.5.3
      - run: |
          curl -L -o split-test https://github.com/mtsmfm/split-test/releases/download/v1.0.0/split-test-x86_64-unknown-linux-gnu
          chmod +x split-test
      - run: make test
        env:
          ACTION_TYPE: CI
          RUBY_VERSION: ${{ inputs.ruby_version }}
          NODE_COUNT: ${{ matrix.node_count }}
          NODE_INDEX: ${{ matrix.node_index }}
          JUNIT_REPORT_DIR_OLD: old-rspec-reports
          JUNIT_REPORT_DIR_NEW: rspec-reports
          GITHUB_TOKEN: ${{ secrets.github_pat }}
          COVERAGE: ${{ inputs.use_simplecov_report }}
          FORCE_TEST: true
      - name: upload coverage report
        if: ${{ inputs.use_simplecov_report == true }}
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report-${{ github.run_id }}
          path: ${{ inputs.simplecov_report_path }}
          if-no-files-found: warn
      - name: upload rspec report
        uses: actions/upload-artifact@v2
        with:
          name: rspec-reports
          path: rspec-reports
          if-no-files-found: warn

  store-simplecov-report:
    if: ${{ inputs.use_simplecov_report == true && (always() && contains(needs.*.result, 'success') && !(contains(needs.*.result, 'failure'))) }}
    name: store simplecov report
    needs: [
      test,
      test-with-mysql,
      test-in-parallel,
      test-in-parallel-with-mysql,
    ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pinnacles/common-cicd-actions/.github/actions/setup-lang@v0.1.0
        with:
          use_ruby: 'true'
          ruby_version: ${{ inputs.ruby_version }}
      - uses: actions/download-artifact@v2
        with:
          name: coverage-report-${{ github.run_id }}
          path: coverage
        continue-on-error: true
      - run: ${{ inputs.simplecov_command }}
      - uses: actions/upload-artifact@v2
        with:
          name: coverage-head
          path: |
            coverage/assets/
            coverage/coverage.json
            coverage/index.html
          if-no-files-found: warn
      - uses: actions/upload-artifact@v2
        with:
          name: coverage-${{ github.sha }}
          path: |
            coverage/assets/
            coverage/coverage.json
            coverage/index.html
          if-no-files-found: warn
      - name: delete coverage report
        uses: geekyeggo/delete-artifact@v1
        with:
          name: coverage-report-${{ github.run_id }}
          failOnError: false
